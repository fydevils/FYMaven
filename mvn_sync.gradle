apply plugin: 'maven'
apply plugin: 'signing'
project.extensions.create("mavenConfig", MavenConfig)

class MavenConfig {
    String artifactId
    String groupId
    String type = "aar"
}

configurations {
    deployerJars
}

repositories {
    mavenCentral()
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }
            afterEvaluate {
                pom.artifactId = project.mavenConfig.artifactId
                if (pom.artifactId==null){
                    pom.artifactId = project['ARTIFACT_ID']
                }
                pom.groupId = project.mavenConfig.groupId
                if (pom.groupId==null){
                    pom.groupId = project['GROUP_ID']
                }
                def BUILD_VERSION = project.getProperties().get("BUILD_VERSION")
                if (null != BUILD_VERSION) {
                    pom.version = BUILD_VERSION
                }
                def USERNAME = project.getProperties().get("USERNAME")
                def PASSWORD = project.getProperties().get("PASSWORD")
                def MAVEN_REPO_RELEASE_URL = 'https://repo.rdc.aliyun.com/repository/49107-release-3gYVam/'
                repository(url: MAVEN_REPO_RELEASE_URL) {
                    authentication(userName: USERNAME, password: PASSWORD)
                }
                def MAVEN_REPO_SNAPSHOT_URL = 'https://repo.rdc.aliyun.com/repository/49107-snapshot-egC0LB/'
                snapshotRepository(url: MAVEN_REPO_SNAPSHOT_URL) {
                    authentication(userName: USERNAME, password: PASSWORD)
                }
            }
        }
    }
}

// 生成sources.jar
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

// 产生相关配置文件的任务
artifacts {
    archives androidSourcesJar
}

// 进行数字签名
signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}